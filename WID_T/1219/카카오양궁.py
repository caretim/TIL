n = 10
info = [1, 2, 1, 0, 0, 0, 0, 0, 1, 4, 1]


# 각각 리스트의 점수가 어피치의 점수를 뛰어넘는 경우의 수를 모두 리스트에 넣어 이중리스트 생성
# 모두 가지고 비교 완전탐색을 해준 후 어피치와 점수 총점 차이가 가장 크게 나는 리스트를 뽑는다.
# 이후 가져온 리스트의 인덱스를 뒤쪽(0점부터 1점 이런식으로 늘려나가면서 범위 내에서 유효하는 점수가 있을 시,
# 바로 출력 또는 동일한 수가 있다면 앞으로 더 탐색하며 비교)

# 횟수도 카운트 해줘야한다. 라이언이 경쟁해서 이기는 방법,


# 점수


def solution(n, info):
    a_point = 0

    # 어피치의 총점 계산
    for i in range(len(info)):
        if info[i] != 0:
            a_point += 10 - i
    # 라이언이 활을 쏴서 어피치를 이길 수 있는 모든 경우의 수의 총점을 계산(여기서 어피치의 인포기록을 참조해야함
    # 리스트마다 횟수이상을 넘겨야 한다, 횟수를 제외시키기)
    # 1.어피치와 차이가 제일큰점수
    # 2. 동일 할 때 적은 점수로 승리하는 경우를 먼저
    # 점수들은, 튜플로 리스트와 정수를 같이 묶어주기?

    answer = []
    return a_point


print(solution(n, info))
